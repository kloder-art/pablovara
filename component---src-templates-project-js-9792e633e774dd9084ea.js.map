{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["StyledProjectPage","styled","article","StyledLayout","div","StyledText","StyledImage","ProjectPage","data","markdownRemark","frontmatter","html","title","dangerouslySetInnerHTML","__html","artwork","map","x","idx","key","src","childImageSharp","original","pageQuery"],"mappings":"2FAAA,8GAQMA,EAAoBC,IAAOC,QAAV,iFAAGD,CAAH,MAEjBE,EAAeF,IAAOG,IAAV,4EAAGH,CAAH,8HAaZI,EAAaJ,IAAOG,IAAV,0EAAGH,CAAH,+JAiBVK,EAAcL,IAAOG,IAAV,2EAAGH,CAAH,MAoDFM,UAlDK,SAAC,GAAD,QAClBC,KACEC,eAAkBC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,KAFf,OAKlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOF,EAAYE,QACxB,kBAACZ,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,KACE,4BAAKK,EAAYE,OACjB,yBAAKC,wBAAyB,CAAEC,OAAQH,MAEzCD,EAAYK,SACXL,EAAYK,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACtB,kBAACZ,EAAD,CAAaa,IAAKD,GAChB,yBACEE,IACEH,EAAEG,KAAOH,EAAEG,IAAIC,gBACXJ,EAAEG,IAAIC,gBAAgBC,SAASF,IAC/B,WAKd,sCA2BD,IAAMG,EAAS","file":"component---src-templates-project-js-9792e633e774dd9084ea.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst StyledProjectPage = styled.article``;\n\nconst StyledLayout = styled.div`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 2rem;\n  grid-auto-flow: column;\n\n  @media (max-width: 600px) {\n    & {\n      grid-auto-flow: row;\n    }\n  }\n`;\n\nconst StyledText = styled.div`\n  white-space: normal;\n  width: 33vw;\n  height: 89vh;\n\n  overflow: hidden;\n  overflow-y: auto;\n\n  @media (max-width: 600px) {\n    & {\n      padding-bottom: 4rem;\n      min-width: inherit;\n      height: auto;\n    }\n  }\n`;\n\nconst StyledImage = styled.div``;\n\nconst ProjectPage = ({\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n}) => (\n  <Layout>\n    <SEO title={frontmatter.title} />\n    <StyledProjectPage>\n      <StyledLayout>\n        <StyledText>\n          <h2>{frontmatter.title}</h2>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </StyledText>\n        {frontmatter.artwork &&\n          frontmatter.artwork.map((x, idx) => (\n            <StyledImage key={idx}>\n              <img\n                src={\n                  x.src && x.src.childImageSharp\n                    ? x.src.childImageSharp.original.src\n                    : null\n                }\n              />\n            </StyledImage>\n          ))}\n        <div>&nbsp;</div>\n      </StyledLayout>\n    </StyledProjectPage>\n  </Layout>\n);\n\nProjectPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        artwork: PropTypes.arrayOf(\n          PropTypes.shape({\n            type: PropTypes.oneOf(['image', 'youtube']),\n            text: PropTypes.string,\n            src: PropTypes.object,\n            id: PropTypes.string,\n          })\n        ),\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ProjectPage;\n\nexport const pageQuery = graphql`\n  query($slug: String) {\n    markdownRemark(\n      frontmatter: { slug: { eq: $slug } }\n      fileInfo: { sourceInstanceName: { eq: \"projects\" } }\n    ) {\n      frontmatter {\n        slug\n        title\n        artwork {\n          type\n          text\n          id\n          src {\n            childImageSharp {\n              original {\n                src\n              }\n            }\n          }\n        }\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}